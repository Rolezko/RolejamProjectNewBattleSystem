package Rolejam;import java.net.URL;import java.util.Date;import java.util.ResourceBundle;import javafx.fxml.FXML;import javafx.fxml.Initializable;import javafx.scene.control.Button;import javafx.scene.control.Label;import javafx.scene.control.ProgressBar;import javafx.scene.control.TextArea;import javafx.scene.control.ToggleButton;import javafx.stage.Stage;public class BattleSceneController implements Initializable {		Hero Hero = new Hero();		Enemy Enemy = new Enemy();		MainSceneController localMainSceneController;			@FXML	Label HPEnemyLabel, AttackPowerEnemyLabel, SpeedEnemyLabel, DefenceEnemyLabel, hCountAbilityT;	@FXML	Label HPHeroLabel, AttackPowerHeroLabel, SpeedHeroLabel, DefenceHeroLabel, eCountAbilityT;	@FXML	Button hReadyB, eReadyB, hSpinAbilityB, eSpinAbilityB;	@FXML	TextArea LogsTA;	@FXML	ProgressBar HPProgressBarHero, HPProgressBarEnemy;	@FXML	ToggleButton hAbilityTg1, hAbilityTg2, hAbilityTg3, eAbilityTg1, eAbilityTg2, eAbilityTg3;				@FXML	public void SpinHeroAbilityButton(){}		@FXML	public void SpinEnemyAbilityButton(){}				public void SettingEnemyParam() {		if(Enemy.CurrentHP <= 0) {	}		else {	    HPEnemyLabel.setText(String.valueOf(Enemy.CurrentHP) + "/" + String.valueOf(Enemy.MaxHP));	    HPProgressBarEnemy.setProgress(((double) Enemy.CurrentHP / (double) Enemy.MaxHP));		AttackPowerEnemyLabel.setText(String.valueOf(Enemy.AttackPower));		SpeedEnemyLabel.setText(String.valueOf(Enemy.AttackSpeed));		DefenceEnemyLabel.setText(String.valueOf(Enemy.Defence));					}	}		public void SettingHeroParam() { 						if(Hero.CurrentHP <= 0) {			HPHeroLabel.setText(String.valueOf(0 + "/" + String.valueOf(Hero.MaxHP)));			HPProgressBarHero.setProgress((0));					}		else {		HPHeroLabel.setText(String.valueOf(Hero.CurrentHP) + "/" + String.valueOf(Hero.MaxHP));		HPProgressBarHero.setProgress(((double) Hero.CurrentHP / (double) Hero.MaxHP));		AttackPowerHeroLabel.setText(String.valueOf(Hero.AttackPower));		SpeedHeroLabel.setText(String.valueOf(Hero.AttackSpeed));		DefenceHeroLabel.setText(String.valueOf(Hero.Defence));						}			}		public void UpdateAllParam() {				SettingEnemyParam();		SettingHeroParam();	}				@Override	public void initialize(URL arg0, ResourceBundle arg1) {		// TODO Auto-generated method stub			}		public void GetHeroInfoFromBattleScene() {		localMainSceneController.SetHeroInfoFromBattleScene(Hero);		localMainSceneController.UpdateHeroStat();	}		public void SetMainController(MainSceneController localMainSceneController) {		this.localMainSceneController = localMainSceneController;			}																	}